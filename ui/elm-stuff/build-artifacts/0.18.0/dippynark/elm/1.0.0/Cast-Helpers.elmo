var _dippynark$elm$Cast_Helpers$oddElements_ = F2(
	function (list, index) {
		oddElements_:
		while (true) {
			var _p0 = list;
			if (_p0.ctor === '[]') {
				return {ctor: '[]'};
			} else {
				var _p1 = _p0._1;
				if (_elm_lang$core$Native_Utils.eq(
					A2(_elm_lang$core$Basics_ops['%'], index, 2),
					0)) {
					var _v1 = _p1,
						_v2 = index + 1;
					list = _v1;
					index = _v2;
					continue oddElements_;
				} else {
					return {
						ctor: '::',
						_0: _p0._0,
						_1: A2(_dippynark$elm$Cast_Helpers$oddElements_, _p1, index + 1)
					};
				}
			}
		}
	});
var _dippynark$elm$Cast_Helpers$oddElements = function (list) {
	return A2(_dippynark$elm$Cast_Helpers$oddElements_, list, 1);
};
var _dippynark$elm$Cast_Helpers$evenElements_ = F2(
	function (list, index) {
		evenElements_:
		while (true) {
			var _p2 = list;
			if (_p2.ctor === '[]') {
				return {ctor: '[]'};
			} else {
				var _p3 = _p2._1;
				if (_elm_lang$core$Native_Utils.eq(
					A2(_elm_lang$core$Basics_ops['%'], index, 2),
					0)) {
					return {
						ctor: '::',
						_0: _p2._0,
						_1: A2(_dippynark$elm$Cast_Helpers$evenElements_, _p3, index + 1)
					};
				} else {
					var _v4 = _p3,
						_v5 = index + 1;
					list = _v4;
					index = _v5;
					continue evenElements_;
				}
			}
		}
	});
var _dippynark$elm$Cast_Helpers$evenElements = function (list) {
	return A2(_dippynark$elm$Cast_Helpers$evenElements_, list, 1);
};
